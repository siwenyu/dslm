{"ast":null,"code":"/**\n * 网络请求配置\n */\nimport axios from \"axios\";\nimport { getEnv } from '../utils/env';\nimport { Spin } from 'antd';\nimport { Toast } from 'antd-mobile';\nimport { RightOutlined } from '@ant-design/icons';\naxios.defaults.timeout = 100000;\naxios.defaults.baseURL = \"http://career.huanxizizai.com/\"; // if (isOnline()) {\n//   axios.defaults.baseURL = \"http://careers.nenu.edu.cn/\";\n// }\n\nif (getEnv() === 'pre') {\n  axios.defaults.baseURL = \"http://career.huanxizizai.com/\";\n}\n\nif (getEnv() === 'online') {\n  axios.defaults.baseURL = \"http://career.nenu.edu.cn/\";\n}\n/**\n * http request 拦截器\n */\n\n\naxios.interceptors.request.use(config => {\n  Toast.loading();\n  config.data = JSON.stringify(config.data);\n  config.headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n/**\n * http response 拦截器\n */\n\naxios.interceptors.response.use(response => {\n  Toast.hide();\n\n  if (response.data.errCode === 2) {\n    console.log(\"过期\");\n  }\n\n  return response;\n}, error => {\n  Toast.hide();\n  console.log(\"请求出错：\", error);\n});\n/**\n * 封装get方法\n * @param url  请求url\n * @param params  请求参数\n * @returns {Promise}\n */\n\nexport function get(url, params = {}) {\n  return new Promise((resolve, reject) => {\n    axios.get(`${url}`, {\n      params: params\n    }).then(response => {\n      // landing(url, params, response.data);\n      if (response && response.data) {\n        resolve(response.data);\n      } else {\n        resolve({});\n      }\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}\n/**\n * 封装post请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function post(url, data) {\n  return new Promise((resolve, reject) => {\n    axios.post(`${url}`, data).then(response => {\n      if (response) {\n        resolve(response.data);\n      } else {\n        reject(response);\n      }\n    }, err => {\n      reject(err);\n    });\n  });\n}\n/**\n * 封装patch请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function patch(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.patch(url, data).then(response => {\n      resolve(response.data);\n    }, err => {\n      msag(err);\n      reject(err);\n    });\n  });\n}\n/**\n * 封装put请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function put(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.put(url, data).then(response => {\n      resolve(response.data);\n    }, err => {\n      msag(err);\n      reject(err);\n    });\n  });\n} //统一接口处理，返回数据\n\nexport default function (fecth, url, param) {\n  let _data = \"\";\n  return new Promise((resolve, reject) => {\n    switch (fecth) {\n      case \"get\":\n        console.log(\"begin a get request,and url:\", url);\n        get(url, param).then(function (response) {\n          resolve(response);\n        }).catch(function (error) {\n          console.log(\"get request GET failed.\", error);\n          reject(error);\n        });\n        break;\n\n      case \"post\":\n        post(url, param).then(function (response) {\n          resolve(response);\n        }).catch(function (error) {\n          console.log(\"get request POST failed.\", error);\n          reject(error);\n        });\n        break;\n\n      default:\n        break;\n    }\n  });\n} //失败提示\n\nfunction msag(err) {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        alert(err.response.data.error.details);\n        break;\n\n      case 401:\n        alert(\"未授权，请登录\");\n        break;\n\n      case 403:\n        alert(\"拒绝访问\");\n        break;\n\n      case 404:\n        alert(\"请求地址出错\");\n        break;\n\n      case 408:\n        alert(\"请求超时\");\n        break;\n\n      case 500:\n        alert(\"服务器内部错误\");\n        break;\n\n      case 501:\n        alert(\"服务未实现\");\n        break;\n\n      case 502:\n        alert(\"网关错误\");\n        break;\n\n      case 503:\n        alert(\"服务不可用\");\n        break;\n\n      case 504:\n        alert(\"网关超时\");\n        break;\n\n      case 505:\n        alert(\"HTTP版本不受支持\");\n        break;\n\n      default:\n    }\n  }\n}\n/**\n * 查看返回的数据\n * @param url\n * @param params\n * @param data\n */\n\n\nfunction landing(url, params, data) {\n  if (data.code === -1) {}\n}","map":{"version":3,"sources":["/Users/ss/Desktop/work/dslm/utils/request.js"],"names":["axios","getEnv","Spin","Toast","RightOutlined","defaults","timeout","baseURL","interceptors","request","use","config","loading","data","JSON","stringify","headers","error","Promise","reject","response","hide","errCode","console","log","get","url","params","resolve","then","catch","post","err","patch","msag","put","fecth","param","_data","status","alert","details","landing","code"],"mappings":"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","sourcesContent":["/**\n * 网络请求配置\n */\nimport axios from \"axios\";\nimport { getEnv } from '../utils/env';\nimport { Spin } from 'antd';\nimport { Toast } from 'antd-mobile';\nimport { RightOutlined } from '@ant-design/icons';\n\naxios.defaults.timeout = 100000;\n\naxios.defaults.baseURL = \"http://career.huanxizizai.com/\";\n// if (isOnline()) {\n//   axios.defaults.baseURL = \"http://careers.nenu.edu.cn/\";\n// }\n\nif (getEnv() === 'pre') {\n  axios.defaults.baseURL = \"http://career.huanxizizai.com/\";\n}\n\nif (getEnv() === 'online') {\n  axios.defaults.baseURL = \"http://career.nenu.edu.cn/\";\n}\n\n/**\n * http request 拦截器\n */\naxios.interceptors.request.use(\n  (config) => {\n    Toast.loading();\n    config.data = JSON.stringify(config.data);\n    config.headers = {\n      \"Content-Type\": \"application/json\",\n    };\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n/**\n * http response 拦截器\n */\naxios.interceptors.response.use(\n  (response) => {\n    Toast.hide();\n    if (response.data.errCode === 2) {\n      console.log(\"过期\");\n    }\n    return response;\n  },\n  (error) => {\n    Toast.hide();\n    console.log(\"请求出错：\", error);\n  }\n);\n\n/**\n * 封装get方法\n * @param url  请求url\n * @param params  请求参数\n * @returns {Promise}\n */\nexport function get(url, params = {}) {\n  return new Promise((resolve, reject) => {\n    axios.get(`${url}`, {\n        params: params,\n      }).then((response) => {\n        // landing(url, params, response.data);\n        if (response && response.data) {\n          resolve(response.data);\n        } else {\n          resolve({});\n        }\n        \n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n}\n\n/**\n * 封装post请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function post(url, data) {\n  return new Promise((resolve, reject) => {\n    axios.post(`${url}`, data).then(\n      (response) => {\n        if (response) {\n          resolve(response.data);\n        } else {\n          reject(response);\n        }\n      },\n      (err) => {\n        reject(err);\n      }\n    );\n  });\n}\n\n/**\n * 封装patch请求\n * @param url\n * @param data\n * @returns {Promise}\n */\nexport function patch(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.patch(url, data).then(\n      (response) => {\n        resolve(response.data);\n      },\n      (err) => {\n        msag(err);\n        reject(err);\n      }\n    );\n  });\n}\n\n/**\n * 封装put请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function put(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.put(url, data).then(\n      (response) => {\n        resolve(response.data);\n      },\n      (err) => {\n        msag(err);\n        reject(err);\n      }\n    );\n  });\n}\n\n//统一接口处理，返回数据\nexport default function (fecth, url, param) {\n  let _data = \"\";\n  return new Promise((resolve, reject) => {\n    switch (fecth) {\n      case \"get\":\n        console.log(\"begin a get request,and url:\", url);\n        get(url, param)\n          .then(function (response) {\n            resolve(response);\n          })\n          .catch(function (error) {\n            console.log(\"get request GET failed.\", error);\n            reject(error);\n          });\n        break;\n      case \"post\":\n        post(url, param)\n          .then(function (response) {\n            resolve(response);\n          })\n          .catch(function (error) {\n            console.log(\"get request POST failed.\", error);\n            reject(error);\n          });\n        break;\n      default:\n        break;\n    }\n  });\n}\n\n//失败提示\nfunction msag(err) {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        alert(err.response.data.error.details);\n        break;\n      case 401:\n        alert(\"未授权，请登录\");\n        break;\n\n      case 403:\n        alert(\"拒绝访问\");\n        break;\n\n      case 404:\n        alert(\"请求地址出错\");\n        break;\n\n      case 408:\n        alert(\"请求超时\");\n        break;\n\n      case 500:\n        alert(\"服务器内部错误\");\n        break;\n\n      case 501:\n        alert(\"服务未实现\");\n        break;\n\n      case 502:\n        alert(\"网关错误\");\n        break;\n\n      case 503:\n        alert(\"服务不可用\");\n        break;\n\n      case 504:\n        alert(\"网关超时\");\n        break;\n\n      case 505:\n        alert(\"HTTP版本不受支持\");\n        break;\n      default:\n    }\n  }\n}\n\n/**\n * 查看返回的数据\n * @param url\n * @param params\n * @param data\n */\nfunction landing(url, params, data) {\n  if (data.code === -1) {\n  }\n}\n"]},"metadata":{},"sourceType":"module"}