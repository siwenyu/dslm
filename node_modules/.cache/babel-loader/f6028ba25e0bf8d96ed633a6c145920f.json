{"ast":null,"code":"var _jsxFileName = \"/Users/ss/Desktop/work/dslm/src/components/ErjiList/index.js\";\nimport React, { useState, Fragment, useEffect } from 'react';\nimport { Menu, Empty, TreeSelect } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport ZhaopinItem from '../ItemNotic';\nimport ItemPreach from '../ItemPreach';\nimport ZhiweiItem from '../ItemJob';\nimport ItemJobWithFair from '../ItemJobWithFair';\nimport { getParam } from '../../../utils/url';\nimport './index.less';\nimport { Form, Input, Select, Pagination } from 'antd';\nimport { searchParamsPreaches, searchParamsNotices, searchParamsJobs, searchParamsJobsFromFair } from './constans';\nimport { getSecCOM_NATURE, getSecRegions, getSecIndustries, postSecPreaches, postSecNotices, postSecJobs, postSecJobsFromfair } from '../../../api/second';\nimport searchIcon from '../../assets/images/search-icon.png';\nconst {\n  Option\n} = Select;\nexport default function ErjiList({\n  type,\n  onSearchChange,\n  isShowList\n}) {\n  const history = useHistory();\n  const [form] = Form.useForm();\n  const [natureList, setNatureList] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [industriesList, setIndustriesList] = useState([]);\n  const [searchName, setSearchName] = useState('');\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(1);\n  const [list, setList] = useState([]);\n  const [valueMap, setValueMap] = useState([]);\n  const [hangyeValueMap, setHangyeValueMap] = useState([]);\n  const [regionsSelect, setRegionsSelect] = useState([]);\n  const [hangyeSelect, setHangyeSelect] = useState([]); // 获取所有筛选条件\n\n  useEffect(() => {\n    getCOM_NATURE();\n    getRegions();\n    getIndustries();\n  }, [history]);\n  const regionsRes = {};\n  const hangyeRes = {};\n\n  const getPath = value => {\n    console.log('valueMap');\n    console.log(valueMap);\n    const path = [];\n    let current = valueMap[value];\n\n    while (current) {\n      path.unshift(current.value);\n      current = current.parent;\n    }\n\n    return path;\n  };\n\n  const loops = (list, parent) => {\n    return (list || []).map(({\n      children,\n      value\n    }) => {\n      const node = regionsRes[value] = {\n        parent,\n        value\n      };\n      node.children = loops(children, node);\n      return node;\n    });\n  };\n\n  const getPathHangye = value => {\n    console.log('hangyeValueMap');\n    console.log(hangyeValueMap);\n    const path = [];\n    let current = hangyeValueMap[value];\n\n    while (current) {\n      path.unshift(current.value);\n      current = current.parent;\n    }\n\n    return path;\n  };\n\n  const loopsHangye = (list, parent) => {\n    return (list || []).map(({\n      children,\n      value\n    }) => {\n      const node = hangyeRes[value] = {\n        parent,\n        value\n      };\n      node.children = loopsHangye(children, node);\n      return node;\n    });\n  }; // 初始化列表\n\n\n  useEffect(() => {\n    setTimeout(() => {\n      onFormChange({});\n    }, 200);\n  }, [history]); // 搜索入参\n\n  let searchParams = {};\n\n  if (type === 'preaches') {\n    searchParamsPreaches.preachDate = getParam('date');\n\n    if (getParam('companyName')) {\n      searchParamsPreaches.company.name = getParam('companyName');\n    }\n\n    searchParams = searchParamsPreaches;\n  }\n\n  if (type === 'notices') {\n    searchParams = searchParamsNotices;\n  }\n\n  if (type === 'jobs') {\n    if (getParam('companyName')) {\n      searchParamsJobs.company.name = getParam('companyName');\n    }\n\n    searchParams = searchParamsJobs;\n  }\n\n  if (type === 'jobsFair') {\n    searchParamsJobsFromFair.fairId = getParam('id');\n    searchParams = searchParamsJobsFromFair;\n  } // 获取性质\n\n\n  const getCOM_NATURE = () => {\n    if (type === 'jobs') {\n      setNatureList([{\n        code: '全职',\n        name: '全职'\n      }, {\n        code: '兼职',\n        name: '兼职'\n      }, {\n        code: '实习',\n        name: '实习'\n      }]);\n    } else {\n      getSecCOM_NATURE().then(res => {\n        res.data && setNatureList(res.data.param);\n      });\n    }\n  }; // 获取地区列表\n\n\n  const getRegions = () => {\n    getSecRegions().then(res => {\n      res.map(item => {\n        item.value = item.code;\n        item.label = item.name;\n        item.title = item.name;\n        item.key = item.code;\n\n        if (item.children && item.children.length > 0) {\n          item.children.map(itemItem => {\n            itemItem.value = itemItem.code;\n            itemItem.label = itemItem.name;\n            itemItem.title = itemItem.name;\n            itemItem.key = itemItem.code;\n\n            if (itemItem.children && itemItem.children.length > 0) {\n              itemItem.children.map(itemItemItem => {\n                itemItemItem.value = itemItemItem.code;\n                itemItemItem.label = itemItemItem.display;\n                itemItemItem.title = itemItemItem.display;\n                itemItemItem.key = itemItemItem.code;\n              });\n            }\n          });\n        }\n      });\n      setRegions(res);\n      loops(res);\n      setValueMap(regionsRes);\n    });\n  }; // 获取行业\n\n\n  const getIndustries = () => {\n    getSecIndustries().then(res => {\n      res.map(item => {\n        item.value = item.code;\n        item.label = item.name;\n\n        if (item.children && item.children.length > 0) {\n          item.children.map(itemItem => {\n            itemItem.value = itemItem.code;\n            itemItem.label = itemItem.name;\n\n            if (itemItem.children && itemItem.children.length > 0) {\n              itemItem.children.map(itemItemItem => {\n                itemItemItem.value = itemItemItem.code;\n                itemItemItem.label = itemItemItem.name;\n\n                if (itemItemItem.children && itemItemItem.children.length > 0) {\n                  itemItemItem.children.map(itemItemItemItem => {\n                    itemItemItemItem.value = itemItemItemItem.code;\n                    itemItemItemItem.label = itemItemItemItem.name;\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n      setIndustriesList(res);\n      loopsHangye(res);\n      setHangyeValueMap(hangyeRes);\n    });\n  }; // 搜索\n\n\n  const onSearch = () => {\n    onFormChange({\n      searchName\n    });\n  };\n\n  const onFormChange = ({\n    searchName,\n    page,\n    regionsSelectNow,\n    hangyeSelectNow\n  }) => {\n    // 名字搜索不为空\n    if (searchName || searchParams.company.name) {\n      searchParams.company.name = searchName || searchParams.company.name;\n    } else {\n      searchParams.company.name = '';\n    }\n\n    const _params = form.getFieldValue();\n\n    console.log('_params');\n    console.log(_params); // 如果是职位搜索，则是全职、兼职、实习\n\n    if (type === 'jobs') {\n      searchParams.nature = _params.nature;\n    } else {\n      searchParams.company.nature.code = _params.nature;\n    } // 地区\n\n\n    const _diqu = regionsSelectNow || regionsSelect;\n\n    if (regionsSelectNow && regionsSelectNow.length === 0) {\n      searchParams.company.region = {\n        provinceCode: '',\n        cityCode: '',\n        countryCode: ''\n      };\n    } else {\n      _diqu.map((item, index) => {\n        if (index === 0) {\n          searchParams.company.region.provinceCode = item;\n        }\n\n        if (index === 1) {\n          searchParams.company.region.cityCode = item;\n        }\n\n        if (index === 2) {\n          searchParams.company.region.countryCode = item;\n        }\n      });\n    }\n\n    const _hangye = hangyeSelectNow || hangyeSelect;\n\n    if (hangyeSelectNow && hangyeSelectNow.length === 0) {\n      searchParams.company.industry = {\n        industryBigCode: '',\n        industryMiddleCode: '',\n        industrySmallCode: '',\n        industryTinyCode: ''\n      };\n    } else {\n      _hangye.map((item, index) => {\n        if (index === 0) {\n          searchParams.company.industry.industryBigCode = item;\n        }\n\n        if (index === 1) {\n          searchParams.company.industry.industryMiddleCode = item;\n        }\n\n        if (index === 2) {\n          searchParams.company.industry.industrySmallCode = item;\n        }\n\n        if (index === 3) {\n          searchParams.company.industry.industryTinyCode = item;\n        }\n      });\n    } // 识别类型\n\n\n    getApi()({ ...searchParams,\n      page: page || 1,\n      pageSize: type === 'jobsFair' ? 20 : 10\n    }).then(resData => {\n      const res = resData.data || {};\n      setTotal(res.total);\n      let _list = [];\n\n      if (type === 'preaches') {\n        _list = res.preaches;\n      }\n\n      if (type === 'notices') {\n        _list = res.notices;\n      }\n\n      if (type === 'jobs') {\n        _list = res.jobs;\n      }\n\n      if (type === 'jobsFair') {\n        _list = res.fairCompanies;\n      }\n\n      onSearchChange && onSearchChange(_list);\n      setList(_list);\n    });\n  };\n\n  const getApi = () => {\n    switch (type) {\n      case 'preaches':\n        return postSecPreaches;\n\n      case 'notices':\n        return postSecNotices;\n\n      case 'jobs':\n        return postSecJobs;\n\n      case 'jobsFair':\n        return postSecJobsFromfair;\n    }\n  }; // 地区选择\n\n\n  const onRegionsChange = (data, index) => {\n    console.log('onRegionsChange');\n    console.log(data, index);\n    console.log(getPath(data));\n    setRegionsSelect(getPath(data));\n    setTimeout(() => {\n      onFormChange({\n        regionsSelectNow: getPath(data)\n      });\n    }, 200);\n  }; // 行业\n\n\n  const onIndustriesChange = data => {\n    console.log('onIndustriesChange');\n    console.log(data);\n    setHangyeSelect(getPathHangye(data));\n    setTimeout(() => {\n      onFormChange({\n        hangyeSelectNow: getPathHangye(data)\n      });\n    }, 200);\n  }; // name\n\n\n  const searchNamechange = (e, index) => {\n    console.log(e);\n    console.log(e.currentTarget);\n    console.log(e.currentTarget.value);\n    setSearchName(e.currentTarget.value);\n  }; // 翻页\n\n\n  const onChange = index => {\n    setPage(index);\n    onFormChange({\n      page: index\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"erji-form gap-bottom-s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    onValuesChange: () => onFormChange({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"search-icon\",\n    src: searchIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onPressEnter: onSearch,\n    onChange: searchNamechange,\n    value: searchName,\n    placeholder: \"\\u641C\\u7D22\\u5355\\u4F4D\\u540D\\u79F0\",\n    prefix: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 124\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: onSearch,\n    className: \"name-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }\n  }, \"\\u641C\\u7D22\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-item xingzhi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"nature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    allowClear: true,\n    listHeight: 240,\n    placeholder: \"\\u6027\\u8D28\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, natureList.map(e => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: e.code,\n      key: e.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 28\n      }\n    }, e.name);\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TreeSelect, {\n    allowClear: true,\n    style: {\n      width: '100%'\n    } // value={form.getFieldValue().region}\n    ,\n    dropdownStyle: {\n      maxHeight: 400,\n      overflow: 'auto'\n    },\n    treeData: regions,\n    placeholder: \"\\u5730\\u533A\" // treeDefaultExpandAll\n    ,\n    onChange: onRegionsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TreeSelect, {\n    allowClear: true,\n    style: {\n      width: '100%'\n    } // value={form.getFieldValue().region}\n    ,\n    dropdownStyle: {\n      maxHeight: 400,\n      overflow: 'auto'\n    },\n    treeData: industriesList,\n    placeholder: \"\\u884C\\u4E1A\" // treeDefaultExpandAll\n    ,\n    onChange: onIndustriesChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 15\n    }\n  }))))), isShowList ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `erjilist-list ${type}-list`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, list && list.length > 0 ? list.slice(0, type === 'jobsFair' ? 20 : 10).map((item, indexIndex) => {\n    switch (type) {\n      case 'preaches':\n        return /*#__PURE__*/React.createElement(ItemPreach, {\n          key: item.title,\n          riliType: item.riliType,\n          data: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 32\n          }\n        });\n\n      case 'notices':\n        return /*#__PURE__*/React.createElement(ZhaopinItem, {\n          key: item.title,\n          riliType: item.riliType,\n          data: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 32\n          }\n        });\n\n      case 'jobs':\n        return /*#__PURE__*/React.createElement(ZhiweiItem, {\n          key: item.title,\n          riliType: item.riliType,\n          data: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 32\n          }\n        });\n\n      case 'jobsFair':\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(ItemJobWithFair, {\n          key: item.title,\n          riliType: item.riliType,\n          data: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 29\n          }\n        }));\n    }\n\n    return /*#__PURE__*/React.createElement(ZhaopinItem, {\n      key: item.title,\n      riliType: item.riliType,\n      data: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 28\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(Empty, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobsFair-not-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }, \"\\u5355\\u4F4D\\u62A5\\u540D\\u8FDB\\u884C\\u4E2D\\uFF0C\\u656C\\u8BF7\\u671F\\u5F85\\uFF01\"), list && list.length > 0 && isShowList && /*#__PURE__*/React.createElement(Pagination, {\n    pageSize: `${type === 'jobsFair' ? 20 : 10}`,\n    defaultCurrent: 1,\n    onChange: onChange,\n    total: total,\n    showSizeChanger: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ss/Desktop/work/dslm/src/components/ErjiList/index.js"],"names":["React","useState","Fragment","useEffect","Menu","Empty","TreeSelect","SearchOutlined","useHistory","ZhaopinItem","ItemPreach","ZhiweiItem","ItemJobWithFair","getParam","Form","Input","Select","Pagination","searchParamsPreaches","searchParamsNotices","searchParamsJobs","searchParamsJobsFromFair","getSecCOM_NATURE","getSecRegions","getSecIndustries","postSecPreaches","postSecNotices","postSecJobs","postSecJobsFromfair","searchIcon","Option","ErjiList","type","onSearchChange","isShowList","history","form","useForm","natureList","setNatureList","regions","setRegions","industriesList","setIndustriesList","searchName","setSearchName","page","setPage","total","setTotal","list","setList","valueMap","setValueMap","hangyeValueMap","setHangyeValueMap","regionsSelect","setRegionsSelect","hangyeSelect","setHangyeSelect","getCOM_NATURE","getRegions","getIndustries","regionsRes","hangyeRes","getPath","value","console","log","path","current","unshift","parent","loops","map","children","node","getPathHangye","loopsHangye","setTimeout","onFormChange","searchParams","preachDate","company","name","fairId","code","then","res","data","param","item","label","title","key","length","itemItem","itemItemItem","display","itemItemItemItem","onSearch","regionsSelectNow","hangyeSelectNow","_params","getFieldValue","nature","_diqu","region","provinceCode","cityCode","countryCode","index","_hangye","industry","industryBigCode","industryMiddleCode","industrySmallCode","industryTinyCode","getApi","pageSize","resData","_list","preaches","notices","jobs","fairCompanies","onRegionsChange","onIndustriesChange","searchNamechange","e","currentTarget","onChange","width","maxHeight","overflow","slice","indexIndex","riliType"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\nimport { Menu, Empty, TreeSelect } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\n\nimport ZhaopinItem from '../ItemNotic';\nimport ItemPreach from '../ItemPreach';\nimport ZhiweiItem from '../ItemJob';\nimport ItemJobWithFair from '../ItemJobWithFair';\n\nimport { getParam } from '../../../utils/url';\n\nimport './index.less';\n\nimport { Form, Input, Select, Pagination } from 'antd';\nimport {\n  searchParamsPreaches,\n  searchParamsNotices,\n  searchParamsJobs,\n  searchParamsJobsFromFair,\n} from './constans';\n\nimport {\n  getSecCOM_NATURE,\n  getSecRegions,\n  getSecIndustries,\n  postSecPreaches,\n  postSecNotices,\n  postSecJobs,\n  postSecJobsFromfair,\n} from '../../../api/second';\n\nimport searchIcon from '../../assets/images/search-icon.png';\n\nconst { Option } = Select;\n\n\nexport default function ErjiList({\n  type, onSearchChange, isShowList\n}) {\n  const history = useHistory();\n\n  const [form] = Form.useForm();\n  const [natureList, setNatureList] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [industriesList, setIndustriesList] = useState([]);\n  const [searchName, setSearchName] = useState('');\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(1);\n  const [list, setList] = useState([]);\n  const [valueMap, setValueMap] = useState([]);\n  const [hangyeValueMap, setHangyeValueMap] = useState([]);\n  const [regionsSelect, setRegionsSelect] = useState([]);\n  const [hangyeSelect, setHangyeSelect] = useState([]);\n\n  // 获取所有筛选条件\n  useEffect(() => {\n    getCOM_NATURE();\n    getRegions();\n    getIndustries();\n  }, [history]);\n\n  const regionsRes = {};\n  const hangyeRes = {};\n\n  const getPath = (value) => {\n    console.log('valueMap');\n    console.log(valueMap);\n    const path = [];\n    let current = valueMap[value];\n    while (current) {\n      path.unshift(current.value);\n      current = current.parent;\n    }\n    return path;\n  }\n\n  const loops = (list, parent) => {\n    return (list || []).map(({ children, value }) => {\n      const node = (regionsRes[value] = {\n        parent,\n        value\n      });\n      node.children = loops(children, node);\n      return node;\n    });\n  }\n\n  const getPathHangye = (value) => {\n    console.log('hangyeValueMap');\n    console.log(hangyeValueMap);\n    const path = [];\n    let current = hangyeValueMap[value];\n    while (current) {\n      path.unshift(current.value);\n      current = current.parent;\n    }\n    return path;\n  }\n\n  const loopsHangye = (list, parent) => {\n    return (list || []).map(({ children, value }) => {\n      const node = (hangyeRes[value] = {\n        parent,\n        value\n      });\n      node.children = loopsHangye(children, node);\n      return node;\n    });\n  }\n\n  // 初始化列表\n  useEffect(() => {\n    setTimeout(() => {\n      onFormChange({});\n    }, 200);\n  }, [history]);\n\n  // 搜索入参\n  let searchParams = {};\n  if (type === 'preaches') {\n    searchParamsPreaches.preachDate = getParam('date');\n    if (getParam('companyName')) {\n      searchParamsPreaches.company.name = getParam('companyName');\n    }\n    searchParams = searchParamsPreaches;\n  }\n  if (type === 'notices') {\n    searchParams = searchParamsNotices;\n  }\n  if (type === 'jobs') {\n    if (getParam('companyName')) {\n      searchParamsJobs.company.name = getParam('companyName');\n    }\n    searchParams = searchParamsJobs;\n  }\n  if (type === 'jobsFair') {\n    searchParamsJobsFromFair.fairId = getParam('id');\n    searchParams = searchParamsJobsFromFair;\n  }\n\n  // 获取性质\n  const getCOM_NATURE = () => {\n    if (type === 'jobs') {\n      setNatureList([\n        {\n          code: '全职',\n          name: '全职',\n        },\n        {\n          code: '兼职',\n          name: '兼职',\n        },\n        {\n          code: '实习',\n          name: '实习',\n        },\n      ])\n    } else {\n      getSecCOM_NATURE().then(res => {\n        res.data && setNatureList(res.data.param);\n      })\n    }\n    \n  }\n\n  // 获取地区列表\n  const getRegions = () => {\n    getSecRegions().then(res => {\n      res.map(item => {\n        item.value = item.code;\n        item.label = item.name;\n        item.title = item.name;\n        item.key = item.code;\n\n        if (item.children && item.children.length > 0) {\n          item.children.map(itemItem => {\n            itemItem.value = itemItem.code;\n            itemItem.label = itemItem.name;\n            itemItem.title = itemItem.name;\n            itemItem.key = itemItem.code;\n\n            if (itemItem.children && itemItem.children.length > 0) {\n              itemItem.children.map(itemItemItem => {\n                itemItemItem.value = itemItemItem.code;\n                itemItemItem.label = itemItemItem.display;\n                itemItemItem.title = itemItemItem.display;\n                itemItemItem.key = itemItemItem.code;\n              })\n            }\n          })\n        }\n      })\n      setRegions(res);\n      loops(res);\n      setValueMap(regionsRes);\n    })\n  }\n\n  // 获取行业\n  const getIndustries = () => {\n    getSecIndustries().then(res => {\n      res.map(item => {\n        item.value = item.code;\n        item.label = item.name;\n\n        if (item.children && item.children.length > 0) {\n          item.children.map(itemItem => {\n            itemItem.value = itemItem.code;\n            itemItem.label = itemItem.name;\n\n            if (itemItem.children && itemItem.children.length > 0) {\n              itemItem.children.map(itemItemItem => {\n                itemItemItem.value = itemItemItem.code;\n                itemItemItem.label = itemItemItem.name;\n\n                if (itemItemItem.children && itemItemItem.children.length > 0) {\n                  itemItemItem.children.map(itemItemItemItem => {\n                    itemItemItemItem.value = itemItemItemItem.code;\n                    itemItemItemItem.label = itemItemItemItem.name;\n                  })\n                }\n              })\n            }\n          })\n        }\n      })\n\n      setIndustriesList(res);\n      loopsHangye(res);\n      setHangyeValueMap(hangyeRes);\n    })\n  };\n\n  // 搜索\n  const onSearch = () => {\n    onFormChange({ searchName });\n  }\n  \n  const onFormChange = ({ searchName, page, regionsSelectNow, hangyeSelectNow }) => {\n    // 名字搜索不为空\n    if (searchName || searchParams.company.name) {\n      searchParams.company.name = searchName || searchParams.company.name;\n    } else {\n      searchParams.company.name = '';\n    }\n    const _params = form.getFieldValue();\n    console.log('_params');\n    console.log(_params);\n    // 如果是职位搜索，则是全职、兼职、实习\n    if (type === 'jobs') {\n      searchParams.nature = _params.nature;\n    } else {\n      searchParams.company.nature.code = _params.nature;\n    }\n    // 地区\n    const _diqu = regionsSelectNow || regionsSelect;\n    if (regionsSelectNow && regionsSelectNow.length === 0) {\n      searchParams.company.region = {\n        provinceCode: '',\n        cityCode: '',\n        countryCode: '',\n      }\n    } else {\n      _diqu.map((item, index) => {\n        if (index === 0) {\n          searchParams.company.region.provinceCode = item;\n        }\n        if (index === 1) {\n          searchParams.company.region.cityCode = item;\n        }\n        if (index === 2) {\n          searchParams.company.region.countryCode = item;\n        }\n      });\n    }\n\n    const _hangye = hangyeSelectNow || hangyeSelect;\n\n    if (hangyeSelectNow && hangyeSelectNow.length === 0) {\n      searchParams.company.industry = {\n        industryBigCode: '',\n        industryMiddleCode: '',\n        industrySmallCode: '',\n        industryTinyCode: '',\n      }\n    } else {\n      _hangye.map((item, index) => {\n        if (index === 0) {\n          searchParams.company.industry.industryBigCode = item;\n        }\n        if (index === 1) {\n          searchParams.company.industry.industryMiddleCode = item;\n        }\n        if (index === 2) {\n          searchParams.company.industry.industrySmallCode = item;\n        }\n  \n        if (index === 3) {\n          searchParams.company.industry.industryTinyCode = item;\n        }\n      });\n    }\n    \n\n    // 识别类型\n    getApi()({ ...searchParams, page: page || 1, pageSize: type === 'jobsFair' ? 20 : 10 }).then(resData => {\n      const res = resData.data || {};\n      setTotal(res.total);\n\n      let _list = [];\n      if (type === 'preaches') {\n        _list = res.preaches;\n      }\n      if (type === 'notices') {\n        _list = res.notices;\n      }\n      if (type === 'jobs') {\n        _list = res.jobs;\n      }\n      if (type === 'jobsFair') {\n        _list = res.fairCompanies;\n      }\n\n      onSearchChange && onSearchChange(_list);\n      setList(_list);\n    });\n  }\n\n  const getApi = () => {\n    switch (type) {\n      case 'preaches':\n        return postSecPreaches;\n      case 'notices':\n        return postSecNotices;\n      case 'jobs':\n        return postSecJobs;\n      case 'jobsFair':\n        return postSecJobsFromfair;\n    }\n  };\n\n  // 地区选择\n  const onRegionsChange = (data, index) => {\n    console.log('onRegionsChange');\n    console.log(data, index);\n    console.log(getPath(data));\n    setRegionsSelect(getPath(data));\n    setTimeout(() => {\n      onFormChange({ regionsSelectNow: getPath(data) });\n    }, 200);\n  }\n\n  // 行业\n  const onIndustriesChange = (data) => {\n    console.log('onIndustriesChange');\n    console.log(data);\n    setHangyeSelect(getPathHangye(data));\n    setTimeout(() => {\n      onFormChange({ hangyeSelectNow: getPathHangye(data) });\n    }, 200);\n  }\n\n  // name\n  const searchNamechange = (e, index) => {\n    console.log(e);\n    console.log(e.currentTarget);\n    console.log(e.currentTarget.value);\n    setSearchName(e.currentTarget.value);\n  }\n\n  // 翻页\n  const onChange = (index) => {\n    setPage(index);\n    onFormChange({ page: index });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"erji-form gap-bottom-s\">\n        <Form\n          form={form}\n          onValuesChange={() => onFormChange({})}\n        >\n          <div className=\"name\">\n            <Form.Item\n                name=\"name\"\n              >\n              <Fragment>\n                <img className=\"search-icon\" src={searchIcon} alt=\"\" />\n                <Input onPressEnter={onSearch} onChange={searchNamechange} value={searchName} placeholder=\"搜索单位名称\" prefix={<div className=\"search-icon\"></div>} />\n                <span onClick={onSearch} className=\"name-btn\">搜索</span>\n              </Fragment>\n            </Form.Item>\n          </div>\n          <div className=\"form-item xingzhi\">\n            <Form.Item\n                name=\"nature\"\n              >\n              <Select allowClear listHeight={240} placeholder=\"性质\">\n                {\n                  natureList.map(e => {\n                    return <Option value={e.code} key={e.code}>{e.name}</Option>\n                  })\n                }\n              </Select>\n            </Form.Item>\n          </div>\n          <div className=\"form-item\">\n            <Form.Item\n                // name=\"region\"\n              >\n              {/* <Cascader options={regions} onChange={onRegionsChange} placeholder=\"地区\" /> */}\n              <TreeSelect\n                allowClear\n                style={{ width: '100%' }}\n                // value={form.getFieldValue().region}\n                dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                treeData={regions}\n                placeholder=\"地区\"\n                // treeDefaultExpandAll\n                onChange={onRegionsChange}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"form-item\">\n            <Form.Item\n                // name=\"industry\"\n              >\n              <TreeSelect\n                allowClear\n                style={{ width: '100%' }}\n                // value={form.getFieldValue().region}\n                dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                treeData={industriesList}\n                placeholder=\"行业\"\n                // treeDefaultExpandAll\n                onChange={onIndustriesChange}\n              />\n              {/* <Cascader options={industriesList} onChange={onIndustriesChange} placeholder=\"行业\" /> */}\n            </Form.Item>\n          </div>\n        </Form>\n      </div>\n      {\n        isShowList\n          ? (\n            <div className={`erjilist-list ${type}-list`}>\n              {\n                (list && list.length > 0)\n                  ? list.slice(0, type === 'jobsFair' ? 20 : 10).map((item, indexIndex) => {\n                    switch (type) {\n                      case 'preaches':\n                        return <ItemPreach key={item.title} riliType={item.riliType} data={item} />;\n                      case 'notices':\n                        return <ZhaopinItem key={item.title} riliType={item.riliType} data={item} />;\n                      case 'jobs':\n                        return <ZhiweiItem key={item.title} riliType={item.riliType} data={item} />;\n                      case 'jobsFair':\n                        return (\n                          <Fragment>\n                            <ItemJobWithFair key={item.title} riliType={item.riliType} data={item} />\n                          </Fragment>\n                        );\n                    }\n                    return <ZhaopinItem key={item.title} riliType={item.riliType} data={item} />\n                  })\n                  : <Empty />\n              }\n            </div>\n          )\n        : (\n          <div className=\"jobsFair-not-show\">\n            单位报名进行中，敬请期待！\n          </div>\n        )\n      }\n\n      {\n        list && list.length > 0 && isShowList && (\n          <Pagination pageSize={`${type === 'jobsFair' ? 20 : 10}`} defaultCurrent={1} onChange={onChange} total={total} showSizeChanger={false} />\n        )\n      }\n    </Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}