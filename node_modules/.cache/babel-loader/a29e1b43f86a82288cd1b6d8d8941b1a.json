{"ast":null,"code":"var _jsxFileName = \"/Users/ss/Desktop/work/dslm/src/components/LeftNav/index.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RightOutlined } from '@ant-design/icons';\nimport _ from 'lodash';\nimport { leftNav1, leftNav2, leftNav3 } from '../../assets/constants';\nimport { getParam } from '../../../utils/url';\nimport './index.less';\n\nconst {\n  pathToRegexp\n} = require(\"path-to-regexp\");\n\nexport default function LeftNav({\n  // list,\n  firstText,\n  onChange\n}) {\n  let list = [];\n  const location = useLocation();\n  const history = useHistory();\n  const [nowIndex, setNowIndex] = useState(0);\n  const [listCopy, setListCopy] = useState(list); // secLNav 选择左侧的nav\n\n  const secLNav = +getParam('secLNav');\n\n  if (secLNav === 1) {\n    list = leftNav1;\n  } else if (secLNav == 2) {\n    list = leftNav2;\n  } else if (secLNav == 3) {\n    list = leftNav3;\n  } else {\n    list = [];\n  } // 设置高亮\n\n\n  useEffect(() => {\n    const listc = _.cloneWith(list);\n\n    listc.map((e, index) => {\n      if (e.path || e.link) {\n        if (+getParam('activeKey') === +e.key) {\n          e.isActive = true;\n          setNowIndex(index);\n        } else {\n          e.isActive = false;\n        }\n      }\n    });\n    setListCopy(listc);\n  }, [location]);\n\n  const navClick = e => {\n    if (e.path || e.link) {\n      history.push(e.path || e.link);\n    }\n\n    if (onChange) {\n      onChange();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, listCopy && listCopy.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navleft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navleft-now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, firstText || listCopy[nowIndex] && (listCopy[nowIndex].text || listCopy[nowIndex].tabName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navleft-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, listCopy.map((e, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: e.text,\n      onClick: () => navClick(e),\n      className: `navleft-item ${e.isActive ? 'active' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }\n    }, e.text || e.tabName), e.isActive && /*#__PURE__*/React.createElement(RightOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 39\n      }\n    }), e.tip && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navleft-tip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 27\n      }\n    }, e.tip));\n  }))));\n}","map":{"version":3,"sources":["/Users/ss/Desktop/work/dslm/src/components/LeftNav/index.js"],"names":["React","useState","useEffect","Fragment","useHistory","useLocation","RightOutlined","_","leftNav1","leftNav2","leftNav3","getParam","pathToRegexp","require","LeftNav","firstText","onChange","list","location","history","nowIndex","setNowIndex","listCopy","setListCopy","secLNav","listc","cloneWith","map","e","index","path","link","key","isActive","navClick","push","length","text","tabName","tip"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RightOutlined } from '@ant-design/icons';\nimport _ from 'lodash';\n\nimport {\n  leftNav1,\n  leftNav2,\n  leftNav3,\n} from '../../assets/constants';\n\nimport { getParam } from '../../../utils/url';\nimport './index.less';\n\nconst { pathToRegexp } = require(\"path-to-regexp\");\n\nexport default function LeftNav({\n  // list,\n  firstText,\n  onChange,\n}) {\n  let list = [];\n  const location = useLocation();\n  const history = useHistory();\n\n  const [nowIndex, setNowIndex] = useState(0);\n  const [listCopy, setListCopy] = useState(list);\n\n  // secLNav 选择左侧的nav\n  const secLNav = +getParam('secLNav');\n  if (secLNav === 1) {\n    list = leftNav1;\n  } else if (secLNav == 2) {\n    list = leftNav2;\n  } else if (secLNav == 3) {\n    list = leftNav3;\n  } else {\n    list = [];\n  }\n  \n  // 设置高亮\n  useEffect(() => {\n    const listc = _.cloneWith(list);\n    listc.map((e, index) => {\n      if (e.path || e.link) {\n        if (+getParam('activeKey') === +e.key) {\n          e.isActive = true;\n          setNowIndex(index);\n        } else {\n          e.isActive = false;\n        }\n      }\n    })\n\n    setListCopy(listc);\n  }, [location]);\n  \n\n  const navClick = (e) => {\n    if (e.path || e.link) {\n      history.push(e.path || e.link);\n    }\n\n    if (onChange) {\n      onChange();\n    }\n  };\n\n  return (\n    <Fragment>\n      {\n        listCopy && listCopy.length > 0 && (\n          <div className=\"navleft\">\n            <div className=\"navleft-now\">\n              {firstText || listCopy[nowIndex] && (listCopy[nowIndex].text || listCopy[nowIndex].tabName)}\n            </div>\n            <div className=\"navleft-list\">\n              {\n                listCopy.map((e, index) => {\n                  return (\n                    <div key={e.text} onClick={() => navClick(e)} className={`navleft-item ${e.isActive ? 'active' : ''}`}>\n                      <div>{e.text || e.tabName}</div>\n\n                      {\n                        e.isActive && <RightOutlined />\n                      }\n\n                      {\n                        e.tip && (\n                          <div className=\"navleft-tip\">{e.tip}</div>\n                        )\n                      }\n                    </div>\n                  );\n                })\n              }\n            </div>\n          </div>\n        )\n      }\n    </Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}